{"ast":null,"code":"import _objectSpread from \"C:/Users/Admin/Desktop/free-lancer/landing/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  const {\n    svgData\n  } = imageShape;\n  if (!svgData) {\n    return \"\";\n  }\n  const colorStyle = getStyleFromHsl(color, opacity);\n  if (svgData.includes(\"fill\")) {\n    return svgData.replace(currentColorRegex, () => colorStyle);\n  }\n  const preFillIndex = svgData.indexOf(\">\");\n  return \"\".concat(svgData.substring(0, preFillIndex), \" fill=\\\"\").concat(colorStyle, \"\\\"\").concat(svgData.substring(preFillIndex));\n}\nexport async function loadImage(image) {\n  return new Promise(resolve => {\n    image.loading = true;\n    const img = new Image();\n    image.element = img;\n    img.addEventListener(\"load\", () => {\n      image.loading = false;\n      resolve();\n    });\n    img.addEventListener(\"error\", () => {\n      image.element = undefined;\n      image.error = true;\n      image.loading = false;\n      getLogger().error(\"\".concat(errorPrefix, \" loading image: \").concat(image.source));\n      resolve();\n    });\n    img.src = image.source;\n  });\n}\nexport async function loadGifImage(image) {\n  if (image.type !== \"gif\") {\n    await loadImage(image);\n    return;\n  }\n  image.loading = true;\n  try {\n    var _getGIFLoopAmount;\n    image.gifData = await decodeGIF(image.source);\n    image.gifLoopCount = (_getGIFLoopAmount = getGIFLoopAmount(image.gifData)) !== null && _getGIFLoopAmount !== void 0 ? _getGIFLoopAmount : 0;\n    if (image.gifLoopCount === 0) {\n      image.gifLoopCount = Infinity;\n    }\n  } catch (_unused) {\n    image.error = true;\n  }\n  image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n  if (image.type !== \"svg\") {\n    await loadImage(image);\n    return;\n  }\n  image.loading = true;\n  const response = await fetch(image.source);\n  if (!response.ok) {\n    getLogger().error(\"\".concat(errorPrefix, \" Image not found\"));\n    image.error = true;\n  } else {\n    image.svgData = await response.text();\n  }\n  image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n  var _particle$opacity$val, _particle$opacity, _imageData$replaceCol;\n  const svgColoredData = replaceColorSvg(image, color, (_particle$opacity$val = (_particle$opacity = particle.opacity) === null || _particle$opacity === void 0 ? void 0 : _particle$opacity.value) !== null && _particle$opacity$val !== void 0 ? _particle$opacity$val : 1),\n    imageRes = {\n      color,\n      gif: imageData.gif,\n      data: _objectSpread(_objectSpread({}, image), {}, {\n        svgData: svgColoredData\n      }),\n      loaded: false,\n      ratio: imageData.width / imageData.height,\n      replaceColor: (_imageData$replaceCol = imageData.replaceColor) !== null && _imageData$replaceCol !== void 0 ? _imageData$replaceCol : imageData.replace_color,\n      source: imageData.src\n    };\n  return new Promise(resolve => {\n    const svg = new Blob([svgColoredData], {\n        type: \"image/svg+xml\"\n      }),\n      domUrl = URL || window.URL || window.webkitURL || window,\n      url = domUrl.createObjectURL(svg),\n      img = new Image();\n    img.addEventListener(\"load\", () => {\n      imageRes.loaded = true;\n      imageRes.element = img;\n      resolve(imageRes);\n      domUrl.revokeObjectURL(url);\n    });\n    img.addEventListener(\"error\", async () => {\n      domUrl.revokeObjectURL(url);\n      const img2 = _objectSpread(_objectSpread({}, image), {}, {\n        error: false,\n        loading: true\n      });\n      await loadImage(img2);\n      imageRes.loaded = true;\n      imageRes.element = img2.element;\n      resolve(imageRes);\n    });\n    img.src = url;\n  });\n}","map":{"version":3,"names":["errorPrefix","getLogger","getStyleFromHsl","decodeGIF","getGIFLoopAmount","currentColorRegex","replaceColorSvg","imageShape","color","opacity","svgData","colorStyle","includes","replace","preFillIndex","indexOf","concat","substring","loadImage","image","Promise","resolve","loading","img","Image","element","addEventListener","undefined","error","source","src","loadGifImage","type","_getGIFLoopAmount","gifData","gifLoopCount","Infinity","_unused","downloadSvgImage","response","fetch","ok","text","replaceImageColor","imageData","particle","_particle$opacity$val","_particle$opacity","_imageData$replaceCol","svgColoredData","value","imageRes","gif","data","_objectSpread","loaded","ratio","width","height","replaceColor","replace_color","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","revokeObjectURL","img2"],"sources":["C:/Users/Admin/Desktop/free-lancer/landing/frontend/node_modules/tsparticles-shape-image/esm/Utils.js"],"sourcesContent":["import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}